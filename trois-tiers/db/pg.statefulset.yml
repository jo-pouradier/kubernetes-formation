apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pg-statefulset
spec:
  selector:
    matchLabels:
      app: pg
  serviceName: pg-service
  replicas: 1
  template:
    metadata:
      labels:
        app: pg
    spec:
      containers:
      - image:  registry.takima.io/school/proxy/postgres:latest
        name:  pg
        resources:
          requests:
            cpu: "100m"
            memory: "100M"
          limits:
            cpu: "500m"
            memory: "256M"
        env:
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              name: pg-config  
              key: db_path     
        - name:  POSTGRES_PASSWORD
          valueFrom:
           secretKeyRef:
            name:  pg-credentials
            key:  password
        - name:  POSTGRES_USER
          valueFrom:
           secretKeyRef:
            name:  pg-credentials
            key:  username
        - name:  POSTGRES_DB
          valueFrom:
           configMapKeyRef:
            name:  pg-config
            key:  pg-db
        ports:
        - containerPort:  5432
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: pg-data
      imagePullSecrets:
      - name: takima-school-registry
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: "gp2"
      resources:
        requests:
          storage: 1Gi
